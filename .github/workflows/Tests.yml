name: Tests

on: [push, pull_request]

jobs:
    test-unittest:
      name: Test (${{ matrix.python-version }}, ${{ matrix.os }})
      runs-on: ${{ matrix.os }}
      strategy:
        max-parallel: 6
        matrix:
            os: [windows-latest, ubuntu-latest]
            python-version: [3.7, 3.8, 3.9]

      steps:
        - uses: actions/checkout@v2
        - uses: conda-incubator/setup-miniconda@v2
          with:
            miniconda-version: "latest"
            python-version: ${{ matrix.python-version }}
            auto-activate-base: true
            add-pip-as-python-dependency: true

        - name: Run tests on Windows
          if: matrix.os == 'windows-latest'
          shell: powershell
          run: |
            conda init 
            conda env update --name test --file environment.yml 
            conda activate test 
            conda install pytest pytest-cov 
            pip install -e . 
            pytest --cov-report xml --cov-report term-missing --cov=pyfoomb tests/ -v

        - name: Run tests on Ubuntu
          if: matrix.os == 'ubuntu-latest'
          shell: bash -l {0}
          run: |
            conda init
            conda env update --name test --file environment.yml
            conda activate test
            conda install pytest pytest-cov
            pip install -e .
            pytest --cov-report xml --cov-report term-missing --cov=pyfoomb tests/ -v

        - name: Upload coverage
          if: matrix.os == 'ubuntu-latest' && matrix.python-version == 3.9
          uses: "codecov/codecov-action@v1"
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
            file: ./coverage.xml
          
        - name: Build wheel on Windows
          if: matrix.os == 'windows-latest'
          shell: powershell
          run: |
            conda init
            conda env create --name build-test --file environment.yml
            conda activate build-test
            pip install -U pip pep517 twine
            python -m pep517.build . 
            pip install dist\pyfoomb*.whl 
            dir
            cd dist
            dir
            python -c "import pyfoomb; print(f'Can successfully import {pyfoomb.__name__} {pyfoomb.__version__}')"
            
        - name: Build wheel on Ubuntu
          if: matrix.os == 'ubuntu-latest'
          shell: bash -l {0}
          run: |
            conda init
            conda env create --name build-test --file environment.yml
            conda activate build-test
            pip install -U pip pep517 twine
            python -m pep517.build .
            cd dist
            pip install pyfoomb*.whl
            python -c "import pyfoomb; print(f'Can successfully import {pyfoomb.__name__} {pyfoomb.__version__}')"
            openssl sha256 pyfoomb*.tar.gz
